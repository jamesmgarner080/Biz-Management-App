{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="backend/auth.js">\nconst jwt = require(\'jsonwebtoken\');\n\n// Middleware to verify JWT token\nfunction authenticateToken(req, res, next) {\n    const authHeader = req.headers[\'authorization\'];\n    const token = authHeader && authHeader.split(\' \')[1]; // Bearer TOKEN\n    \n    if (!token) {\n        return res.status(401).json({ error: \'Access token required\' });\n    }\n    \n    jwt.verify(token, process.env.JWT_SECRET, (err, user) => {\n        if (err) {\n            return res.status(403).json({ error: \'Invalid or expired token\' });\n        }\n        req.user = user;\n        next();\n    });\n}\n\n// Middleware to check if user is management\nfunction requireManagement(req, res, next) {\n    if (req.user.role !== \'management\') {\n        return res.status(403).json({ error: \'Management access required\' });\n    }\n    next();\n}\n\n// Generate JWT token\nfunction generateToken(user) {\n    return jwt.sign(\n        { \n            id: user.id, \n            username: user.username, \n            role: user.role,\n            full_name: user.full_name\n        },\n        process.env.JWT_SECRET,\n        { expiresIn: process.env.JWT_EXPIRES_IN || \'24h\' }\n    );\n}\n\nmodule.exports = {\n    authenticateToken,\n    requireManagement,\n    generateToken\n};\n</create-file>\n</function_calls>'}