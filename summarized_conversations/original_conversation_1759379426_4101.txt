{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="backend/routes/schedules.js">\nconst express = require(\'express\');\nconst { authenticateToken, requireManagement } = require(\'../auth\');\n\nfunction createScheduleRoutes(db, io) {\n    const router = express.Router();\n    \n    // Get schedules by date\n    router.get(\'/date/:date\', authenticateToken, (req, res) => {\n        try {\n            const schedules = db.getShiftSchedulesByDate(req.params.date);\n            res.json(schedules);\n        } catch (error) {\n            console.error(\'Get schedules by date error:\', error);\n            res.status(500).json({ error: \'Failed to get schedules\' });\n        }\n    });\n    \n    // Get user schedules\n    router.get(\'/user/:userId\', authenticateToken, (req, res) => {\n        try {\n            const { userId } = req.params;\n            const { startDate, endDate } = req.query;\n            \n            // Users can only view their own schedules unless they\'re management\n            if (req.user.role !== \'management\' && parseInt(userId) !== req.user.id) {\n                return res.status(403).json({ error: \'Access denied\' });\n            }\n            \n            const schedules = db.getShiftSchedulesByUser(userId, startDate, endDate);\n            res.json(schedules);\n        } catch (error) {\n            console.error(\'Get user schedules error:\', error);\n            res.status(500).json({ error: \'Failed to get schedules\' });\n        }\n    });\n    \n    // Get users on shift for a specific date\n    router.get(\'/on-duty/:date\', authenticateToken, (req, res) => {\n        try {\n            const users = db.getUsersOnShift(req.params.date);\n            res.json(users);\n        } catch (error) {\n            console.error(\'Get users on shift error:\', error);\n            res.status(500).json({ error: \'Failed to get users on shift\' });\n        }\n    });\n    \n    // Create shift schedule (management only)\n    router.post(\'/\', authenticateToken, requireManagement, (req, res) => {\n        try {\n            const { user_id, shift_date, shift_start, shift_end, role, notes } = req.body;\n            \n            if (!user_id || !shift_date || !shift_start || !shift_end) {\n                return res.status(400).json({ error: \'Missing required fields\' });\n            }\n            \n            const result = db.createShiftSchedule({\n                user_id,\n                shift_date,\n                shift_start,\n                shift_end,\n                role,\n                notes\n            });\n            \n            // Notify user about their shift\n            db.createNotification(\n                user_id,\n                null,\n                `You have been scheduled for a shift on ${shift_date} from ${shift_start} to ${shift_end}`,\n                \'system\'\n            );\n            \n            // Emit socket event\n            io.to(`user_${user_id}`).emit(\'shift_scheduled\', {\n                date: shift_date,\n                start: shift_start,\n                end: shift_end\n            });\n            \n            // Log action\n            db.logAction(req.user.id, \'create_schedule\', \'schedule\', result.lastInsertRowid, \n                `Created shift schedule for user ${user_id}`, req.ip);\n            \n            res.status(201).json({\n                message: \'Shift schedule created successfully\',\n                scheduleId: result.lastInsertRowid\n            });\n        } catch (error) {\n            console.error(\'Create schedule error:\', error);\n            res.status(500).json({ error: \'Failed to create schedule\' });\n        }\n    });\n    \n    return router;\n}\n\nmodule.exports = createScheduleRoutes;\n</create-file>\n</function_calls>'}