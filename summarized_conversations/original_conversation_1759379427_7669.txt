{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="backend/routes/templates.js">\nconst express = require(\'express\');\nconst { authenticateToken, requireManagement } = require(\'../auth\');\n\nfunction createTemplateRoutes(db) {\n    const router = express.Router();\n    \n    // Get all task templates\n    router.get(\'/\', authenticateToken, (req, res) => {\n        try {\n            const templates = db.getAllTaskTemplates();\n            res.json(templates);\n        } catch (error) {\n            console.error(\'Get templates error:\', error);\n            res.status(500).json({ error: \'Failed to get templates\' });\n        }\n    });\n    \n    // Get template by ID\n    router.get(\'/:id\', authenticateToken, (req, res) => {\n        try {\n            const template = db.getTaskTemplateById(req.params.id);\n            if (!template) {\n                return res.status(404).json({ error: \'Template not found\' });\n            }\n            res.json(template);\n        } catch (error) {\n            console.error(\'Get template error:\', error);\n            res.status(500).json({ error: \'Failed to get template\' });\n        }\n    });\n    \n    // Create task template (management only)\n    router.post(\'/\', authenticateToken, requireManagement, (req, res) => {\n        try {\n            const { name, description, category, priority, estimated_duration, recurrence_pattern } = req.body;\n            \n            if (!name || !category || !priority) {\n                return res.status(400).json({ error: \'Missing required fields\' });\n            }\n            \n            const result = db.createTaskTemplate({\n                name,\n                description,\n                category,\n                priority,\n                estimated_duration,\n                recurrence_pattern,\n                created_by: req.user.id\n            });\n            \n            // Log action\n            db.logAction(req.user.id, \'create_template\', \'template\', result.lastInsertRowid, \n                `Created task template: ${name}`, req.ip);\n            \n            res.status(201).json({\n                message: \'Task template created successfully\',\n                templateId: result.lastInsertRowid\n            });\n        } catch (error) {\n            console.error(\'Create template error:\', error);\n            res.status(500).json({ error: \'Failed to create template\' });\n        }\n    });\n    \n    // Delete task template (management only)\n    router.delete(\'/:id\', authenticateToken, requireManagement, (req, res) => {\n        try {\n            const { id } = req.params;\n            const template = db.getTaskTemplateById(id);\n            \n            if (!template) {\n                return res.status(404).json({ error: \'Template not found\' });\n            }\n            \n            db.deleteTaskTemplate(id);\n            \n            // Log action\n            db.logAction(req.user.id, \'delete_template\', \'template\', id, \n                `Deleted task template: ${template.name}`, req.ip);\n            \n            res.json({ message: \'Task template deleted successfully\' });\n        } catch (error) {\n            console.error(\'Delete template error:\', error);\n            res.status(500).json({ error: \'Failed to delete template\' });\n        }\n    });\n    \n    return router;\n}\n\nmodule.exports = createTemplateRoutes;\n</create-file>\n</function_calls>'}