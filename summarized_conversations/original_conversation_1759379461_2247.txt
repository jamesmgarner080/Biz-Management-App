{'role': 'assistant', 'content': 'Now let\'s update the database.js to include permission management:\n\n<function_calls>\n<str-replace file_path="backend/database.js">\n<old_str>    initializeDatabase() {\n        const schemaPath = path.join(__dirname, \'../database/schema.sql\');\n        \n        if (fs.existsSync(schemaPath)) {\n            const schema = fs.readFileSync(schemaPath, \'utf8\');\n            \n            // Split by semicolon and execute each statement\n            const statements = schema.split(\';\').filter(stmt => stmt.trim());\n            \n            statements.forEach(statement => {\n                try {\n                    this.db.exec(statement);\n                } catch (error) {\n                    console.error(\'Error executing statement:\', error.message);\n                }\n            });\n            \n            console.log(\'Database initialized successfully\');\n            this.createDefaultAdmin();\n        } else {\n            console.error(\'Schema file not found\');\n        }\n    }</old_str>\n<new_str>    initializeDatabase() {\n        const schemaPath = path.join(__dirname, \'../database/schema.sql\');\n        const permissionsPath = path.join(__dirname, \'../database/add_permissions.sql\');\n        \n        if (fs.existsSync(schemaPath)) {\n            const schema = fs.readFileSync(schemaPath, \'utf8\');\n            \n            // Split by semicolon and execute each statement\n            const statements = schema.split(\';\').filter(stmt => stmt.trim());\n            \n            statements.forEach(statement => {\n                try {\n                    this.db.exec(statement);\n                } catch (error) {\n                    console.error(\'Error executing statement:\', error.message);\n                }\n            });\n            \n            console.log(\'Database initialized successfully\');\n            \n            // Initialize permissions\n            if (fs.existsSync(permissionsPath)) {\n                const permissionsSchema = fs.readFileSync(permissionsPath, \'utf8\');\n                const permStatements = permissionsSchema.split(\';\').filter(stmt => stmt.trim());\n                \n                permStatements.forEach(statement => {\n                    try {\n                        this.db.exec(statement);\n                    } catch (error) {\n                        console.error(\'Error executing permissions statement:\', error.message);\n                    }\n                });\n                \n                console.log(\'Permissions initialized successfully\');\n            }\n            \n            this.createDefaultAdmin();\n        } else {\n            console.error(\'Schema file not found\');\n        }\n    }</new_str>\n</str-replace>\n</function_calls>'}