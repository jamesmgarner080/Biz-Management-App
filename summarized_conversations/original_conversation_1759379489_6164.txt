{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="frontend/js/app.js">\n<old_str>// Utility function to escape HTML\nfunction escapeHtml(text) {\n    if (!text) return \'\';\n    const div = document.createElement(\'div\');\n    div.textContent = text;\n    return div.innerHTML;\n}</old_str>\n<new_str>// Theme Management Functions\nfunction initializeTheme() {\n    const savedTheme = localStorage.getItem(\'theme\') || \'light\';\n    setTheme(savedTheme, false);\n}\n\nfunction setTheme(theme, save = true) {\n    document.documentElement.setAttribute(\'data-theme\', theme);\n    \n    if (save) {\n        localStorage.setItem(\'theme\', theme);\n        showToast(`${theme === \'dark\' ? \'Dark\' : \'Light\'} mode enabled`, \'success\');\n    }\n    \n    // Update button states\n    const lightBtn = document.getElementById(\'lightModeBtn\');\n    const darkBtn = document.getElementById(\'darkModeBtn\');\n    \n    if (lightBtn && darkBtn) {\n        if (theme === \'light\') {\n            lightBtn.classList.remove(\'btn-secondary\');\n            lightBtn.classList.add(\'btn-primary\');\n            darkBtn.classList.remove(\'btn-primary\');\n            darkBtn.classList.add(\'btn-secondary\');\n        } else {\n            darkBtn.classList.remove(\'btn-secondary\');\n            darkBtn.classList.add(\'btn-primary\');\n            lightBtn.classList.remove(\'btn-primary\');\n            lightBtn.classList.add(\'btn-secondary\');\n        }\n    }\n}\n\n// Utility function to escape HTML\nfunction escapeHtml(text) {\n    if (!text) return \'\';\n    const div = document.createElement(\'div\');\n    div.textContent = text;\n    return div.innerHTML;\n}</new_str>\n</str-replace>\n</function_calls>'}