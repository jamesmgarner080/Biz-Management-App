{'role': 'assistant', 'content': 'Now let\'s ensure admin has proper access to task management features. Let me check the task routes:\n\n\n<function_calls>\n<str-replace file_path="backend/routes/tasks.js">\n<old_str>    // Create new task (management only)\n    router.post(\'/\', authenticateToken, requireManagement, (req, res) => {\n        try {\n            const {\n                title,\n                description,\n                category,\n                priority,\n                assignment_type,\n                assigned_to,\n                assigned_date,\n                due_date,\n                due_time,\n                recurrence\n            } = req.body;</old_str>\n<new_str>    // Create new task (management only or with permission)\n    router.post(\'/\', authenticateToken, (req, res) => {\n        const db = req.app.get(\'db\');\n        \n        // Check if user has permission\n        if (![\'admin\', \'manager\', \'supervisor\'].includes(req.user.role) && \n            !db.hasPermission(req.user.id, \'create_tasks\')) {\n            return res.status(403).json({ error: \'Permission required: create_tasks\' });\n        }\n        \n        try {\n            const {\n                title,\n                description,\n                category,\n                priority,\n                assignment_type,\n                assigned_to,\n                assigned_date,\n                due_date,\n                due_time,\n                recurrence\n            } = req.body;</new_str>\n</str-replace>\n</function_calls>\n</function_calls>'}