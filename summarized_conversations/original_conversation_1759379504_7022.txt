{'role': 'assistant', 'content': 'Now let\'s update the frontend to show task management buttons based on permissions:\n\n<function_calls>\n<str-replace file_path="frontend/js/app.js">\n<old_str>// Render task list\nfunction renderTaskList(tasks, containerId, showActions = false) {\n    const container = document.getElementById(containerId);\n    \n    if (!tasks || tasks.length === 0) {\n        container.innerHTML = `\n            <div class="empty-state">\n                <div class="empty-state-icon">\n                    <i class="fas fa-tasks"></i>\n                </div>\n                <h3 class="empty-state-title">No tasks found</h3>\n                <p class="empty-state-message">There are no tasks to display.</p>\n            </div>\n        `;\n        return;\n    }\n    \n    container.innerHTML = tasks.map(task => `\n        <div class="task-item" data-task-id="${task.id}">\n            <div class="task-content">\n                <div class="task-header">\n                    <div>\n                        <h3 class="task-title">${escapeHtml(task.title)}</h3>\n                        <div class="task-meta">\n                            <span class="task-meta-item">\n                                <i class="fas fa-tag"></i>\n                                ${escapeHtml(task.category)}\n                            </span>\n                            <span class="badge priority-${task.priority.toLowerCase()}">\n                                ${task.priority}\n                            </span>\n                            <span class="badge status-${task.status}">\n                                ${task.status}\n                            </span>\n                            ${task.assignment_type === \'shift-based\' ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-calendar"></i>\n                                    Shift: ${task.assigned_date}\n                                </span>` : \n                                task.assigned_to_name ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-user"></i>\n                                    ${escapeHtml(task.assigned_to_name)}\n                                </span>` : \'\'\n                            }\n                            ${task.due_date ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-clock"></i>\n                                    Due: ${task.due_date}${task.due_time ? \' \' + task.due_time : \'\'}\n                                </span>` : \'\'\n                            }\n                        </div>\n                    </div>\n                    <div class="task-actions">\n                        ${task.status !== \'completed\' && (currentUser.role === \'management\' || task.assigned_to === currentUser.id || task.assignment_type === \'shift-based\') ? \n                            `<button class="btn btn-success btn-sm complete-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-check"></i>\n                                Complete\n                            </button>` : \'\'\n                        }\n                        ${showActions && currentUser.role === \'management\' ? \n                            `<button class="btn btn-secondary btn-sm edit-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-edit"></i>\n                            </button>\n                            <button class="btn btn-danger btn-sm delete-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-trash"></i>\n                            </button>` : \'\'\n                        }\n                    </div>\n                </div>\n                ${task.description ? \n                    `<p class="task-description">${escapeHtml(task.description)}</p>` : \'\'\n                }\n            </div>\n        </div>\n    `).join(\'\');</old_str>\n<new_str>// Render task list\nfunction renderTaskList(tasks, containerId, showActions = false) {\n    const container = document.getElementById(containerId);\n    \n    if (!tasks || tasks.length === 0) {\n        container.innerHTML = `\n            <div class="empty-state">\n                <div class="empty-state-icon">\n                    <i class="fas fa-tasks"></i>\n                </div>\n                <h3 class="empty-state-title">No tasks found</h3>\n                <p class="empty-state-message">There are no tasks to display.</p>\n            </div>\n        `;\n        return;\n    }\n    \n    // Check if user can edit/delete tasks\n    const canEdit = [\'admin\', \'manager\', \'supervisor\'].includes(currentUser.role);\n    const canDelete = [\'admin\', \'manager\'].includes(currentUser.role);\n    \n    container.innerHTML = tasks.map(task => `\n        <div class="task-item" data-task-id="${task.id}">\n            <div class="task-content">\n                <div class="task-header">\n                    <div>\n                        <h3 class="task-title">${escapeHtml(task.title)}</h3>\n                        <div class="task-meta">\n                            <span class="task-meta-item">\n                                <i class="fas fa-tag"></i>\n                                ${escapeHtml(task.category)}\n                            </span>\n                            <span class="badge priority-${task.priority.toLowerCase()}">\n                                ${task.priority}\n                            </span>\n                            <span class="badge status-${task.status}">\n                                ${task.status}\n                            </span>\n                            ${task.assignment_type === \'shift-based\' ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-calendar"></i>\n                                    Shift: ${task.assigned_date}\n                                </span>` : \n                                task.assigned_to_name ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-user"></i>\n                                    ${escapeHtml(task.assigned_to_name)}\n                                </span>` : \'\'\n                            }\n                            ${task.due_date ? \n                                `<span class="task-meta-item">\n                                    <i class="fas fa-clock"></i>\n                                    Due: ${task.due_date}${task.due_time ? \' \' + task.due_time : \'\'}\n                                </span>` : \'\'\n                            }\n                        </div>\n                    </div>\n                    <div class="task-actions">\n                        ${task.status !== \'completed\' && ([\'admin\', \'manager\', \'supervisor\'].includes(currentUser.role) || task.assigned_to === currentUser.id || task.assignment_type === \'shift-based\') ? \n                            `<button class="btn btn-success btn-sm complete-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-check"></i>\n                                Complete\n                            </button>` : \'\'\n                        }\n                        ${showActions && canEdit ? \n                            `<button class="btn btn-secondary btn-sm edit-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-edit"></i>\n                            </button>` : \'\'\n                        }\n                        ${showActions && canDelete ? \n                            `<button class="btn btn-danger btn-sm delete-task-btn" data-task-id="${task.id}">\n                                <i class="fas fa-trash"></i>\n                            </button>` : \'\'\n                        }\n                    </div>\n                </div>\n                ${task.description ? \n                    `<p class="task-description">${escapeHtml(task.description)}</p>` : \'\'\n                }\n            </div>\n        </div>\n    `).join(\'\');</new_str>\n</str-replace>\n</function_calls>'}